Traceback (most recent call last):
  File "C:\Users\Matt_Admin\anaconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\Matt_Admin\anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\Matt_Admin\anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\Matt_Admin\anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\Matt_Admin\anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\Users\Matt_Admin\anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\Matt_Admin\anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Matt_Admin\anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
\section{Sloping Ramp}\label{C1_slope}
In this final section we are going to think about generalising the scenario further and asking ourselves why were castles built on top of hills? There is certainly the argument that climbing a hill is tiring, but by making some approximations to model the shape of a hill we can see how an upward slope changes the range of a projectile compared to an upward slope or firing on a level plane.\\
We are going to only consider the most simple model for a hill which is a straight line with some constant gradient. If you wanted to you can do the same process as we are about to see but use a different expression for the hill.

\begin{centering}
\begin{figure}[h]
\captionsetup{width=0.9\textwidth}
\begin{center}
\pdftooltip{\includegraphics[width=0.65\textwidth]{Images/\string"Projectile slope\string".png}}{Firing a projectile down a ramp inclined at an angle $\alpha$ with respect to the horizontal, where a positive $\alpha$ indicates an upwards sloping ramp. Care should be taken to note that the firing angle $\theta$ is defined with respect to the horizontal, and not to the surface of the ramp. The new landing coordinates are $(x',y')$.}
\end{center}
\vspace{-1cm}
\caption{Firing a projectile down a ramp inclined at an angle $\alpha$ with respect to the horizontal, where a positive $\alpha$ indicates an upwards sloping ramp. Care should be taken to note that the firing angle $\theta$ is defined with respect to the horizontal, and not to the surface of the ramp. The new landing coordinates are $(x',y')$.}
\end{figure}
\end{centering}

\subsection{Projectile Range}

In this situation we once again consider the intersection between the parabolic curve and the landing 'line'. In section \ref{C1_launch} we used the simple expression $y=h$ but in the case of a sloping ramp we must use the equation of a straight line expressed in terms of the angle of the ramp, such that
\begin{align*}
x'\tan\alpha &= x'\tan\theta - \dfrac{gx'^2}{2v_0^2\cos^2\theta}
\end{align*}
where $x'$ is the $x$-coordinate of the landing point on the ramp and $\alpha$ is the slope angle.
Thus
\begin{align}
\dfrac{gx'}{2v_0^2\cos^2\theta} &= \tan\theta - \tan\alpha\nonumber\\
x' &= \dfrac{2v_0^2}{g}\left(\cos^2\theta\tan\theta - \cos^2\theta\tan\alpha\right)\nonumber\\
&= \dfrac{2v_0^2}{g}\left(\sin\theta\cos\theta - \cos^2\theta\tan\alpha\right)\label{eq:slope-x}
\end{align}

It is worth reiterating that this expression is for the \textbf{horizontal coordinate of the landing point} and not the length down the ramp. However this length $L$ can easily be found from trigonometry
\begin{align}
L &= \dfrac{x'}{\cos\alpha}\nonumber\\
&= \dfrac{2v_0^2}{g\cos\alpha}\left(\sin\theta\cos\theta - \cos^2\theta\dfrac{\sin\alpha}{\cos\alpha}\right)\nonumber\\
&= \dfrac{2v_0^2\cos\theta}{g\cos\alpha}\left(\dfrac{\sin\theta\cos\alpha - \cos\theta\sin\alpha}{\cos\alpha}\right)\nonumber\\
&= \dfrac{2v_0^2\cos\theta}{g\cos^2\alpha}\left[\sin(\theta - \alpha)\right]\label{eq:slope-L}
\end{align}

A (double) sensibility check can be performed here as both equations \ref{eq:slope-x} and \ref{eq:slope-L} should reduce to the range equation (equation \ref{eq:R2}) when the angle of the slope $\alpha$ is zero.

\subsection{Angle for Maximum Range}
Determining the angle for maximum range requires us to look for a stationary point in the function $x'(\theta)$ or $L(\theta)$. We are able to use either equation \ref{eq:slope-x} or \ref{eq:slope-L} as they both describe the same landing point, and so in this case we will (somewhat arbitrarily) work with equation \ref{eq:slope-L}.
\begin{align*}
\dfrac{\mathrm{d}L}{\mathrm{d}\theta} = 0 &= \dfrac{2v_0^2}{g\cos^2\alpha}\,\dfrac{\mathrm{d}}{\mathrm{d}\theta}\left((\sin[\theta-\alpha]\cos\theta\right)\\
&= \dfrac{2v_0^2}{g\cos^2\alpha}\,\left(\cos\theta\cos[\theta-\alpha]-\sin\theta\sin[\theta-\alpha]\right)\\
&= \dfrac{2v_0^2}{g\cos^2\alpha}\,\cos\left(\alpha-2\theta\right)
\end{align*}

As the term outside of the bracket does not equal zero we find
\begin{align*}
0&= \cos\left(\alpha-2\theta_{\text{max}}\right)\\
\therefore \alpha-2\theta_{\text{max}} &= \cos^{-1}(0)\\
\therefore \theta_{\text{max}} &= \dfrac{\alpha}{2} - \frac{\pi}{2}\left(n -\dfrac{1}{2}\right) = \frac{\alpha}{2}+\frac{\pi}{4}
\end{align*}
where $n$ is any integer. We only require the first solution, i.e. $n=0$ which gives us the final expression. You can perform another sensibility check by seeing what happens when $\alpha=0$, i.e the flat surface situation.\\
Substituting this value for $\theta_\text{max}$ into equation \ref{eq:slope-L} will give the maximum distance down the ramp when fired at $\theta_{\text{max}}$;
\begin{align*}
L_{\text{max}} &= \dfrac{v_0^2}{g\cos^2\alpha}\left[\frac{1}{2}\left(\cos(2\alpha)-\sin(\alpha)\right)\right]
\end{align*}
------------------

[1;36m  Cell [1;32mIn[1], line 1[1;36m[0m
[1;33m    \section{Sloping Ramp}\label{C1_slope}[0m
[1;37m     ^[0m
[1;31mSyntaxError[0m[1;31m:[0m unexpected character after line continuation character

SyntaxError: unexpected character after line continuation character (740207439.py, line 1)

